# -*- coding: utf-8 -*-
"""Untitled16.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1c6qA5E85DCut8yemaUmF5qLRqKid4dUa
"""

from google.colab import files

# Prompt the user to upload a file
uploaded = files.upload()

# Check the uploaded files
for filename in uploaded.keys():
    print(f'File uploaded: {filename}')

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Read data from CSV file
df = pd.read_csv('world_population_data......csv')

# Display column names to check for discrepancies
print(df.columns)

# Set the background color for the entire figure
plt.figure(facecolor='#f0f0f0')  # Light gray background

# Create visualizations
plt.figure(figsize=(16, 12))

# Trend chart
plt.subplot(2, 2, 1)
for country in df['country']:
    plt.plot(df.columns[4:], df[df['country'] == country].iloc[0, 4:], marker='o', label=country)
plt.title('Population Trend (2020-2023)')
plt.xlabel('Year')
plt.ylabel('Population')
plt.legend()
plt.xticks(rotation=45)  # Rotate x-axis labels by 45 degrees
plt.subplots_adjust(hspace=0.5)  # Adjust vertical space between subplots

# Bar chart
plt.subplot(2, 2, 2)
sns.barplot(x='2010 population', y='country', data=df.sort_values(by='2010 population', ascending=False))
plt.title('2010 Population by Country')
plt.xlabel('Population')
plt.xticks(rotation=45)  # Rotate x-axis labels by 45 degrees

# Horizontal bar chart
plt.subplot(2, 2, 3)
sns.barplot(x='2023 population', y='country', data=df.sort_values(by='2023 population', ascending=True))
plt.title('2023 Population by Country')
plt.xlabel('Population')
plt.xticks(rotation=45)  # Rotate x-axis labels by 45 degrees

# Donut chart
plt.subplot(2, 2, 4)
plt.pie(df['2015 population'], labels=df['country'], autopct='%1.1f%%', startangle=90, wedgeprops=dict(width=0.4))
plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.
plt.title('2015 Population Distribution')
plt.legend(bbox_to_anchor=(1, 1))  # Place legend outside the pie chart

plt.tight_layout()
plt.show()